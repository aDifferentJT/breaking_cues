name: Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build Release
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest] 
    steps:
    - uses: actions/checkout@v4
    - name: Install dependencies (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt update
        sudo apt install \
          libwebkit2gtk-4.1-dev \
          build-essential \
          curl \
          wget \
          file \
          libxdo-dev \
          libssl-dev \
          libayatana-appindicator3-dev \
          librsvg2-dev
    - name: Install Elm
      run: npm install -g elm
    - name: Test Elm
      run: elm --help
    - uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        toolchain: nightly
    - uses: Swatinem/rust-cache@v2
      with:
        # The cargo workspaces and target directory configuration.
        # These entries are separated by newlines and have the form
        # `$workspace -> $target`. The `$target` part is treated as a directory
        # relative to the `$workspace` and defaults to "target" if not explicitly given.
        # default: ". -> target"
        workspaces: "src-tauri"
    - name: Install Tauri CLI
      run: cargo install tauri-cli
    - name: Build
      run: cargo tauri build
    - name: Upload Artefact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ runner.os }}
        path: ./src-tauri/target/release/bundle/*
    - name: Upload Assets to Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: ./src-tauri/target/release/bundle/*
